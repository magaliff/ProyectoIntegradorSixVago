{
	"info": {
		"_postman_id": "43974471-d92f-47cc-b68b-e20c318e7274",
		"name": "Proyecto Integrador 3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17956933"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var re = JSON.parse(responseBody);\r",
									"pm.environment.set(\"token\", re.body.token);\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"angelj.estradaa@ecci.edu.co\",\r\n    \"contrasenia\":\"jesus\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/auth/login",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\":\"jesus\",\r\n    \"apellido\":\"anaya\",\r\n    \"email\":\"ya@yopmail.com\",\r\n    \"contrasenia\":\"jesus\",\r\n    \"rol\": {\r\n        \"id\":2\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/auth/register",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "categorias",
			"item": [
				{
					"name": "categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/categorias",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"categorias"
							]
						}
					},
					"response": []
				},
				{
					"name": "añadir categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var re = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id_upd\", re.id);\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Mansion embrujada\",\r\n    \"descripcion\": \"es una mansion que esta embrujada\",\r\n    \"urlImagen\": \"no hay\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/categorias",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"categorias"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{id_upd}},\r\n    \"titulo\": \"Mansion embrujada\",\r\n    \"descripcion\": \"es una mansion que esta embrujada\",\r\n    \"urlImagen\": \"ahora hay, esta actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/categorias",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"categorias"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminar categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Mansion embrujada\",\r\n    \"descripcion\": \"es una mansion que esta embrujada\",\r\n    \"urlImagen\": \"ahora hay, esta actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/categorias/{{id_upd}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"categorias",
								"{{id_upd}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "puntuacion",
			"item": [
				{
					"name": "listar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/puntuacion",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"puntuacion"
							]
						}
					},
					"response": []
				},
				{
					"name": "añadir",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var re = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id_upd\", re.caracteristicas_id);\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"puntuacion\": 3,\r\n    \"usuarios\": {\r\n        \"id\": 1\r\n    },\r\n    \"productosProductos\": {\r\n                \"productos_id\": 1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/puntuacion",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"puntuacion"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"puntuacion\": 5,\r\n    \"usuarios\": {\r\n        \"id\": 1\r\n    },\r\n    \"productosProductos\": {\r\n                \"productos_id\": 1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/puntuacion",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"puntuacion"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Mansion embrujada\",\r\n    \"descripcion\": \"es una mansion que esta embrujada\",\r\n    \"urlImagen\": \"ahora hay, esta actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/puntuacion/{{id_upd}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"puntuacion",
								"{{id_upd}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "reservas",
			"item": [
				{
					"name": "listar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/reservas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"reservas"
							]
						}
					},
					"response": []
				},
				{
					"name": "añadir",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var re = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id_upd\", re.id);\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"horaComienzoReserva\": \"15:00:00\",\r\n        \"fechaInicialReserva\": \"2022-11-20\",\r\n        \"fechaFinalReserva\": \"2022-11-30\",\r\n        \"vacunaCovid\": false,\r\n        \"datosParaVendedor\": \"no hay dato en este\",\r\n        \"productosProductos\": {\r\n            \"productos_id\": 2\r\n        },\r\n        \"usuarios\": {\r\n            \"id\": 40\r\n        }\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/reservas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"reservas"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"id\":{{id_upd}},\r\n        \"horaComienzoReserva\": \"20:00:00\",\r\n        \"fechaInicialReserva\": \"2022-12-20\",\r\n        \"fechaFinalReserva\": \"2022-12-30\",\r\n        \"vacunaCovid\": false,\r\n        \"datosParaVendedor\": \"no hay dato en este\",\r\n        \"productosProductos\": {\r\n            \"productos_id\": 2\r\n        },\r\n        \"usuarios\": {\r\n            \"id\": 1\r\n        }\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/reservas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"reservas"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscarReservaPorProductoId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/reservas/productos?idproducto=1",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"reservas",
								"productos"
							],
							"query": [
								{
									"key": "idproducto",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/reservas/1",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"reservas",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/reservas/3",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"reservas",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "producto",
			"item": [
				{
					"name": "productoPorFechaReserva",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/productos/fecha?fechaInicial=2022-06-20&fechaFinal=2022-06-29",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"productos",
								"fecha"
							],
							"query": [
								{
									"key": "fechaInicial",
									"value": "2022-06-20"
								},
								{
									"key": "fechaFinal",
									"value": "2022-06-29"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar todos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/productos",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"productos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar por ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/productos/ciudad?nombreCiudad=asdasd",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"productos",
								"ciudad"
							],
							"query": [
								{
									"key": "nombreCiudad",
									"value": "asdasd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar por categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/productos/categorias?tituloCategoria=asdasd",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"productos",
								"categorias"
							],
							"query": [
								{
									"key": "tituloCategoria",
									"value": "asdasd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "añadir producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var re = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id_upd\", re.productos_id);\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\":\"hotelPrueba2\",\r\n    \"descripcion\":\"hotel 5 estrellas\",\r\n    \"direccion\":\"Pelegrini 520\",\r\n    \"politicas_servicio\":\"ninguna\",\r\n    \"categorias_id\":{\r\n        \"id\": 1\r\n    },\r\n    \"ciudades_id\":{\r\n        \"ciudades_id\": 1\r\n    },\r\n    \"caracteristicas\":[{\r\n        \"caracteristicas_id\":1\r\n    }],\r\n    \"politicas\":[\r\n        {\r\n        \"id\":1\r\n        },\r\n        {\r\n        \"id\":2\r\n        },\r\n        {\r\n        \"id\":2\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/productos",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"productos"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"productos_id\":{{id_upd}},\r\n    \"nombre\":\"hotelSix\",\r\n    \"descripcion\":\"hotel 5 estrellas\",\r\n    \"direccion\":\"Pelegrini 520\",\r\n    \"politicas_servicio\":\"ninguna\",\r\n    \"categorias_id\":{\r\n        \"id\": 1\r\n    },\r\n    \"ciudades_id\":{\r\n        \"ciudades_id\": 1\r\n    },\r\n    \"caracteristicas\":[{\r\n        \"caracteristicas_id\":1\r\n    }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/productos",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"productos"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminar categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Mansion embrujada\",\r\n    \"descripcion\": \"es una mansion que esta embrujada\",\r\n    \"urlImagen\": \"ahora hay, esta actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/productos/{{id_upd}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"productos",
								"{{id_upd}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ciudad",
			"item": [
				{
					"name": "Listar todas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/ciudades",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"ciudades"
							]
						}
					},
					"response": []
				},
				{
					"name": "añadir",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var re = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id_upd\", re.ciudades_id);\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"nombre\": \"asd\",\r\n        \"pais\": \"asd\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/ciudades",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"ciudades"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"ciudades_id\": {{id_upd}},\r\n        \"nombre\": \"asd\",\r\n        \"pais\": \"asd\"        \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/ciudades",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"ciudades"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminar categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Mansion embrujada\",\r\n    \"descripcion\": \"es una mansion que esta embrujada\",\r\n    \"urlImagen\": \"ahora hay, esta actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/ciudades/{{id_upd}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"ciudades",
								"{{id_upd}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Caracteristicas",
			"item": [
				{
					"name": "Get all caracteristicas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/caracteristicas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"caracteristicas"
							]
						}
					},
					"response": []
				},
				{
					"name": "añadir Caracteristica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var re = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id_upd\", re.caracteristicas_id);\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"cocina\",\r\n    \"icono\": \"fa-solid fa-kitchen-set\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/caracteristicas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"caracteristicas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"caracteristicas_id\": {{id_upd}},\r\n    \"nombre\": \"cocina\",\r\n    \"icono\": \"fa-solid fa-kitchen-set\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/caracteristicas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"caracteristicas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar Categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/caracteristicas/{{id_upd}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"caracteristicas",
								"{{id_upd}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "usuario",
			"item": [
				{
					"name": "listar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/usuarios",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"id\": 2,\r\n            \"nombre\": \"angel\",\r\n            \"apellido\": \"estrada\",\r\n            \"email\": \"rangel1998.rt@gmail.com\",\r\n            \"contrasenia\": \"12345678\",\r\n            \"ciudad\": \"Santa\",\r\n            \"rol\": {\r\n                \"id\": 1\r\n            }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}:8080/usuarios",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "politicas",
			"item": [
				{
					"name": "listar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test response is less than 1000ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"time_response\")))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{url}}:8080/politicas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "8080",
							"path": [
								"politicas"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}